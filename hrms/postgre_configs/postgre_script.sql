-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.companies
(
    company_id integer NOT NULL,
    company_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    website character varying(50) COLLATE pg_catalog."default" NOT NULL,
    telephone_number character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_companies PRIMARY KEY (company_id)
    );

CREATE TABLE IF NOT EXISTS public.company_validation
(
    company_validation_id integer NOT NULL,
    company_id integer NOT NULL,
    date date NOT NULL,
    personnel_validation_status character varying(25) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    email_validation_status character varying(25) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    CONSTRAINT pk_company_validation PRIMARY KEY (company_validation_id)
    );

CREATE TABLE IF NOT EXISTS public.employee_validation
(
    employee_validation_id integer NOT NULL,
    employee_id integer NOT NULL,
    date date NOT NULL,
    email_validation_status character varying(25) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    CONSTRAINT pk_employee_validation PRIMARY KEY (employee_validation_id)
    );

CREATE TABLE IF NOT EXISTS public.employees
(
    employee_id integer NOT NULL,
    name character varying(25) COLLATE pg_catalog."default" NOT NULL,
    lastname character varying(25) COLLATE pg_catalog."default" NOT NULL,
    identity_number character varying(11) COLLATE pg_catalog."default" NOT NULL,
    dateofbirth date NOT NULL,
    CONSTRAINT pk_employees PRIMARY KEY (employee_id)
    );

CREATE TABLE IF NOT EXISTS public.jobs
(
    job_id integer NOT NULL,
    company_id integer NOT NULL,
    title character varying(25) COLLATE pg_catalog."default" NOT NULL,
    field character varying(25) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    salary smallint NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    location character varying(25) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_jobs PRIMARY KEY (job_id)
    );

CREATE TABLE IF NOT EXISTS public.personnel
(
    personnel_id integer NOT NULL,
    name character varying(25) COLLATE pg_catalog."default" NOT NULL,
    lastname character varying(25) COLLATE pg_catalog."default" NOT NULL,
    identity_number character varying(11) COLLATE pg_catalog."default" NOT NULL,
    dateofbirth date NOT NULL,
    telephone_number character varying(10) COLLATE pg_catalog."default" NOT NULL,
    title character varying COLLATE pg_catalog."default" DEFAULT 'hrms personnel'::character varying,
    CONSTRAINT pk_personnel PRIMARY KEY (personnel_id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    user_id integer NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(256) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (user_id)
    );

ALTER TABLE IF EXISTS public.companies
    ADD CONSTRAINT fk_companies_users FOREIGN KEY (company_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS pk_companies
    ON public.companies(company_id);


ALTER TABLE IF EXISTS public.company_validation
    ADD CONSTRAINT fk_company_validation_employer FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.employee_validation
    ADD CONSTRAINT fk_employee_validation_employee FOREIGN KEY (employee_id)
    REFERENCES public.employees (employee_id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT fk_employees_users FOREIGN KEY (employee_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS pk_employees
    ON public.employees(employee_id);


ALTER TABLE IF EXISTS public.jobs
    ADD CONSTRAINT fk_jobs_companies FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.personnel
    ADD CONSTRAINT fk_personnel_users FOREIGN KEY (personnel_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE CASCADE
       ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS fki_fk_personnel_users
    ON public.personnel(personnel_id);

END;